// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Nagyhazii_Proba1.Persistence.MsSql;

#nullable disable

namespace Nagyhazii_Proba1.Persistence.MsSql.Migrations
{
    [DbContext(typeof(RealEstateDbContext))]
    [Migration("20241016001751_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Nagyhazii_Proba1.Model.Contract", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BuyerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ContractExpiration")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("PropertyId")
                        .HasColumnType("int");

                    b.Property<int>("SellerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SignDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BuyerId");

                    b.HasIndex("PropertyId");

                    b.HasIndex("SellerId");

                    b.ToTable("Contracts");
                });

            modelBuilder.Entity("Nagyhazii_Proba1.Model.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DistrictPreferences")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LookingForPurchase")
                        .HasColumnType("bit");

                    b.Property<bool>("LookingForRent")
                        .HasColumnType("bit");

                    b.Property<double>("MaxArea")
                        .HasColumnType("float");

                    b.Property<decimal?>("MaxPrice")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("MaxRooms")
                        .HasColumnType("int");

                    b.Property<double>("MinArea")
                        .HasColumnType("float");

                    b.Property<decimal?>("MinPrice")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("MinRooms")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Nagyhazii_Proba1.Model.Property", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<double>("Area")
                        .HasColumnType("float");

                    b.Property<int>("District")
                        .HasColumnType("int");

                    b.Property<decimal?>("RentPrice")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("Rooms")
                        .HasColumnType("int");

                    b.Property<decimal?>("SellingPrice")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.ToTable("Properties");
                });

            modelBuilder.Entity("Nagyhazii_Proba1.Model.PropertyOwner", b =>
                {
                    b.Property<int>("PropertyId")
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.HasKey("PropertyId", "CustomerId");

                    b.HasIndex("CustomerId");

                    b.ToTable("PropertyOwners");
                });

            modelBuilder.Entity("Nagyhazii_Proba1.Model.Contract", b =>
                {
                    b.HasOne("Nagyhazii_Proba1.Model.Customer", "Buyer")
                        .WithMany()
                        .HasForeignKey("BuyerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Nagyhazii_Proba1.Model.Property", "Property")
                        .WithMany()
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Nagyhazii_Proba1.Model.Customer", "Seller")
                        .WithMany()
                        .HasForeignKey("SellerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Buyer");

                    b.Navigation("Property");

                    b.Navigation("Seller");
                });

            modelBuilder.Entity("Nagyhazii_Proba1.Model.PropertyOwner", b =>
                {
                    b.HasOne("Nagyhazii_Proba1.Model.Customer", "Customer")
                        .WithMany("OwnedProperties")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Nagyhazii_Proba1.Model.Property", "Property")
                        .WithMany("PropertyOwners")
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Property");
                });

            modelBuilder.Entity("Nagyhazii_Proba1.Model.Customer", b =>
                {
                    b.Navigation("OwnedProperties");
                });

            modelBuilder.Entity("Nagyhazii_Proba1.Model.Property", b =>
                {
                    b.Navigation("PropertyOwners");
                });
#pragma warning restore 612, 618
        }
    }
}
